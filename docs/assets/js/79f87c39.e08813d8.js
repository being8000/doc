"use strict";(self.webpackChunktauri_docs=self.webpackChunktauri_docs||[]).push([[7187],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},30400:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),l=["components"],o={},s=void 0,p={unversionedId:"api/js/modules/shell",id:"api/js/modules/shell",title:"shell",description:"@tauri-apps/api / shell",source:"@site/docs/api/js/modules/shell.md",sourceDirName:"api/js/modules",slug:"/api/js/modules/shell",permalink:"/doc/v1/api/js/modules/shell",draft:!1,editUrl:"https://github.com/tauri-apps/tauri-docs/edit/dev/docs/api/js/modules/shell.md",tags:[],version:"current",lastUpdatedAt:1652246483,formattedLastUpdatedAt:"5/11/2022",frontMatter:{},sidebar:"api",previous:{title:"process",permalink:"/doc/v1/api/js/modules/process"},next:{title:"tauri",permalink:"/doc/v1/api/js/modules/tauri"}},u={},c=[{value:"Security",id:"security",level:2},{value:"Restricting access to the <code>open</code> API",id:"restricting-access-to-the-open-api",level:3},{value:"Restricting access to the <code>Command</code> APIs",id:"restricting-access-to-the-command-apis",level:3},{value:"Example scope configuration",id:"example-scope-configuration",level:4},{value:"Classes",id:"classes",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Functions",id:"functions",level:2},{value:"open",id:"open",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4}],d={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/doc/v1/api/js/"},"@tauri-apps/api")," / shell"),(0,r.kt)("h1",{id:"module-shell"},"Module: shell"),(0,r.kt)("p",null,"Access the system shell.\nAllows you to spawn child processes and manage files and URLs using their default application."),(0,r.kt)("p",null,"This package is also accessible with ",(0,r.kt)("inlineCode",{parentName:"p"},"window.__TAURI__.shell")," when ",(0,r.kt)("inlineCode",{parentName:"p"},"tauri.conf.json > build > withGlobalTauri")," is set to true."),(0,r.kt)("p",null,"The APIs must be allowlisted on ",(0,r.kt)("inlineCode",{parentName:"p"},"tauri.conf.json"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "tauri": {\n    "allowlist": {\n      "shell": {\n        "all": true, // enable all shell APIs\n        "execute": true, // enable process spawn APIs\n        "sidecar": true, // enable spawning sidecars\n        "open": true // enable opening files/URLs using the default program\n      }\n    }\n  }\n}\n')),(0,r.kt)("p",null,"It is recommended to allowlist only the APIs you use for optimal bundle size and security."),(0,r.kt)("h2",{id:"security"},"Security"),(0,r.kt)("p",null,"This API has a scope configuration that forces you to restrict the programs and arguments that can be used."),(0,r.kt)("h3",{id:"restricting-access-to-the-open-api"},"Restricting access to the ",(0,r.kt)("a",{parentName:"h3",href:"/doc/v1/api/js/modules/shell#open"},(0,r.kt)("inlineCode",{parentName:"a"},"open"))," API"),(0,r.kt)("p",null,"On the allowlist, ",(0,r.kt)("inlineCode",{parentName:"p"},"open: true")," means that the ",(0,r.kt)("a",{parentName:"p",href:"/doc/v1/api/js/modules/shell#open"},"open")," API can be used with any URL,\nas the argument is validated with the ",(0,r.kt)("inlineCode",{parentName:"p"},"^https?://")," regex.\nYou can change that regex by changing the boolean value to a string, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"open: ^https://github.com/"),"."),(0,r.kt)("h3",{id:"restricting-access-to-the-command-apis"},"Restricting access to the ",(0,r.kt)("a",{parentName:"h3",href:"/doc/v1/api/js/classes/shell.Command"},(0,r.kt)("inlineCode",{parentName:"a"},"Command"))," APIs"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"shell")," allowlist object has a ",(0,r.kt)("inlineCode",{parentName:"p"},"scope")," field that defines an array of CLIs that can be used.\nEach CLI is a configuration object ",(0,r.kt)("inlineCode",{parentName:"p"},"{ name: string, cmd: string, sidecar?: bool, args?: boolean | Arg[] }"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),": the unique identifier of the command, passed to the ",(0,r.kt)("a",{parentName:"li",href:"/doc/v1/api/js/classes/shell.Command#constructor"},"Command constructor"),".\nIf it's a sidecar, this must be the value defined on ",(0,r.kt)("inlineCode",{parentName:"li"},"tauri.conf.json > tauri > bundle > externalBin"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cmd"),": the program that is executed on this configuration. If it's a sidecar, this value is ignored."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sidecar"),": whether the object configures a sidecar or a system program."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"args"),": the arguments that can be passed to the program. By default no arguments are allowed.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"true")," means that any argument list is allowed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"false")," means that no arguments are allowed."),(0,r.kt)("li",{parentName:"ul"},"otherwise an array can be configured. Each item is either a string representing the fixed argument value\nor a ",(0,r.kt)("inlineCode",{parentName:"li"},"{ validator: string }")," that defines a regex validating the argument value.")))),(0,r.kt)("h4",{id:"example-scope-configuration"},"Example scope configuration"),(0,r.kt)("p",null,"CLI: ",(0,r.kt)("inlineCode",{parentName:"p"},'git commit -m "the commit message"')),(0,r.kt)("p",null,"Configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scope": {\n    "name": "run-git-commit",\n    "cmd": "git",\n    "args": ["commit", "-m", { "validator": "\\\\S+" }]\n  }\n}\n')),(0,r.kt)("p",null,"Usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Command } from '@tauri-apps/api/shell'\nnew Command('run-git-commit', ['commit', '-m', 'the commit message'])\n")),(0,r.kt)("p",null,"Trying to execute any API with a program not configured on the scope results in a promise rejection due to denied access."),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/doc/v1/api/js/classes/shell.Child"},"Child")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/doc/v1/api/js/classes/shell.Command"},"Command")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/doc/v1/api/js/classes/shell.EventEmitter"},"EventEmitter"))),(0,r.kt)("h2",{id:"interfaces"},"Interfaces"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/doc/v1/api/js/interfaces/shell.ChildProcess"},"ChildProcess")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/doc/v1/api/js/interfaces/shell.SpawnOptions"},"SpawnOptions"))),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"open"},"open"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"open"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"path"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"openWith?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,r.kt)("p",null,"Opens a path or URL with the system's default app,\nor the one specified with ",(0,r.kt)("inlineCode",{parentName:"p"},"openWith"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"openWith")," value must be one of ",(0,r.kt)("inlineCode",{parentName:"p"},"firefox"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"google chrome"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"chromium")," ",(0,r.kt)("inlineCode",{parentName:"p"},"safari"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"open"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"start"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"xdg-open"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"gio"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"gnome-open"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"kde-open")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"wslview"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// opens the given URL on the default browser:\nawait open('https://github.com/tauri-apps/tauri')\n// opens the given URL using `firefox`:\nawait open('https://github.com/tauri-apps/tauri', 'firefox')\n// opens a file using the default program:\nawait open('/path/to/file')\n")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"path")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The path or URL to open. This value is matched against the string regex defined on ",(0,r.kt)("inlineCode",{parentName:"td"},"tauri.conf.json > tauri > allowlist > shell > open"),", which defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"^https?://"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"openWith?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The app to open the file or URL with. Defaults to the system default application for the specified path type.")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/tauri-apps/tauri/blob/c8667f9/tooling/api/src/shell.ts#L416"},"shell.ts:416")))}m.isMDXComponent=!0}}]);