"use strict";(self.webpackChunktauri_docs=self.webpackChunktauri_docs||[]).push([[5582],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},72360:function(e,t,n){n.d(t,{Z:function(){return l}});var a=n(67294),r=n(86010),i="tabItem_OmH5";function l(e){var t=e.children,n=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:n},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(87462),r=n(67294),i=n(72389),l=n(67392),o=n(7094),s=n(12466),u=n(86010),p="tabList_uSqn",c="tabItem_LplD";function d(e){var t,n,i,d=e.lazy,m=e.block,h=e.defaultValue,v=e.values,b=e.groupId,f=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=v?v:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),w=(0,l.l)(k,(function(e,t){return e.value===t.value}));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===h?h:null!=(t=null!=h?h:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(i=g[0])?void 0:i.props.value;if(null!==y&&!k.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,o.U)(),x=N.tabGroupChoices,T=N.setTabGroupChoices,j=(0,r.useState)(y),C=j[0],O=j[1],E=[],S=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var I=x[b];null!=I&&I!==C&&k.some((function(e){return e.value===I}))&&O(I)}var D=function(e){var t=e.currentTarget,n=E.indexOf(t),a=k[n].value;a!==C&&(S(t),O(a),null!=b&&T(b,a))},Z=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=E.indexOf(e.currentTarget)+1;n=E[a]||E[0];break;case"ArrowLeft":var r=E.indexOf(e.currentTarget)-1;n=E[r]||E[E.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,u.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":m},f)},k.map((function(e){var t=e.value,n=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:function(e){return E.push(e)},onKeyDown:Z,onFocus:D,onClick:D},i,{className:(0,u.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":C===t})}),null!=n?n:t)}))),d?(0,r.cloneElement)(g.filter((function(e){return e.props.value===C}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==C})}))))}function m(e){var t=(0,i.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},2534:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return v},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return m}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=n(9877),o=n(72360),s=["components"],u={},p="Selenium",c={unversionedId:"guides/testing/webdriver/example/selenium",id:"guides/testing/webdriver/example/selenium",title:"Selenium",description:"",source:"@site/docs/guides/04-testing/webdriver/example/selenium.md",sourceDirName:"guides/04-testing/webdriver/example",slug:"/guides/testing/webdriver/example/selenium",permalink:"/doc/v1/guides/testing/webdriver/example/selenium",draft:!1,editUrl:"https://github.com/tauri-apps/tauri-docs/edit/dev/docs/guides/04-testing/webdriver/example/selenium.md",tags:[],version:"current",lastUpdatedAt:1652462994,formattedLastUpdatedAt:"5/14/2022",frontMatter:{},sidebar:"guides",previous:{title:"Introduction",permalink:"/doc/v1/guides/testing/webdriver/introduction"},next:{title:"Setup Example",permalink:"/doc/v1/guides/testing/webdriver/example/setup"}},d={},m=[{value:"Create a Directory for the Tests",id:"create-a-directory-for-the-tests",level:2},{value:"Initializing a Selenium Project",id:"initializing-a-selenium-project",level:2},{value:"Testing",id:"testing",level:2},{value:"Running the Test Suite",id:"running-the-test-suite",level:2}],h={toc:m};function v(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"selenium"},"Selenium"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Example Application")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This ",(0,i.kt)("a",{parentName:"p",href:"https://selenium.dev/"},"Selenium")," guide expects you to have already gone through the ",(0,i.kt)("a",{parentName:"p",href:"setup"},"example Application setup")," to follow\nstep-by-step. The general information may still be helpful otherwise."))),(0,i.kt)("p",null,"This WebDriver testing example will use ",(0,i.kt)("a",{parentName:"p",href:"https://selenium.dev/"},"Selenium")," and a popular Node.js testing suite. You are expected to already have\nNode.js installed, along with ",(0,i.kt)("inlineCode",{parentName:"p"},"npm")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn")," although the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/chippers/hello_tauri"},"finished example project")," uses ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn"),"."),(0,i.kt)("h2",{id:"create-a-directory-for-the-tests"},"Create a Directory for the Tests"),(0,i.kt)("p",null,"Let's create a space to write these tests in our project. We will be using a nested directory for\nthis example project as we will later also go over other frameworks, but typically you will only need to use one. Create\nthe directory we will use with ",(0,i.kt)("inlineCode",{parentName:"p"},"mkdir -p webdriver/selenium"),". The rest of this guide will assume you are inside the\n",(0,i.kt)("inlineCode",{parentName:"p"},"webdriver/selenium")," directory."),(0,i.kt)("h2",{id:"initializing-a-selenium-project"},"Initializing a Selenium Project"),(0,i.kt)("p",null,"We will be using a pre-existing ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," to bootstrap this test suite because we have already chosen specific\ndependencies to use and want to showcase a simple working solution. The bottom of this section has a collapsed\nguide on how to set it up from scratch."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "selenium",\n  "version": "1.0.0",\n  "private": true,\n  "scripts": {\n    "test": "mocha"\n  },\n  "dependencies": {\n    "chai": "^4.3.4",\n    "mocha": "^9.0.3",\n    "selenium-webdriver": "^4.0.0-beta.4"\n  }\n}\n')),(0,i.kt)("p",null,"We have a script that runs ",(0,i.kt)("a",{parentName:"p",href:"https://mochajs.org/"},"Mocha")," as a test framework exposed as the ",(0,i.kt)("inlineCode",{parentName:"p"},"test")," command. We also have various dependencies\nthat we will be using to run the tests. ",(0,i.kt)("a",{parentName:"p",href:"https://mochajs.org/"},"Mocha")," as the testing framework, ",(0,i.kt)("a",{parentName:"p",href:"https://www.chaijs.com/"},"Chai")," as the assertion library, and\n",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/selenium-webdriver"},(0,i.kt)("inlineCode",{parentName:"a"},"selenium-webdriver"))," which is the Node.js ",(0,i.kt)("a",{parentName:"p",href:"https://selenium.dev/"},"Selenium")," package."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Click me if you want to see how to set a project up from scratch"),(0,i.kt)("p",null,"If you want to install the dependencies from scratch, just run the following command."),(0,i.kt)(l.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install mocha chai selenium-webdriver\n"))),(0,i.kt)(o.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add mocha chai selenium-webdriver\n")))),(0,i.kt)("p",null,"I suggest also adding a ",(0,i.kt)("inlineCode",{parentName:"p"},'"test": "mocha"')," item in the ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," ",(0,i.kt)("inlineCode",{parentName:"p"},'"scripts"')," key so that running Mocha can be called\nsimply with"),(0,i.kt)(l.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm test\n"))),(0,i.kt)(o.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn test\n"))))),(0,i.kt)("h2",{id:"testing"},"Testing"),(0,i.kt)("p",null,"Unlike the ",(0,i.kt)("a",{parentName:"p",href:"webdriverio#config"},"WebdriverIO Test Suite"),", Selenium does not come out of the box with a Test Suite and\nleaves it up to the developer to build those out. We chose ",(0,i.kt)("a",{parentName:"p",href:"https://mochajs.org/"},"Mocha"),", which is pretty neutral and not related to WebDrivers, so our script will need to do a bit of work to set up everything for us in the correct order. ",(0,i.kt)("a",{parentName:"p",href:"https://mochajs.org/"},"Mocha")," expects a\ntesting file at ",(0,i.kt)("inlineCode",{parentName:"p"},"test/test.js")," by default, so let's create that file now."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"test/test.js"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const os = require("os");\nconst path = require("path");\nconst { expect } = require("chai");\nconst { spawn, spawnSync } = require("child_process");\nconst { Builder, By, Capabilities } = require("selenium-webdriver");\n\n// create the path to the expected application binary\nconst application = path.resolve(\n  __dirname,\n  "..",\n  "..",\n  "..",\n  "target",\n  "release",\n  "hello-tauri-webdriver"\n);\n\n// keep track of the webdriver instance we create\nlet driver;\n\n// keep track of the tauri-driver process we start\nlet tauriDriver;\n\nbefore(async function() {\n  // set timeout to 2 minutes to allow the program to build if it needs to\n  this.timeout(120000)\n\n  // ensure the program has been built\n  spawnSync("cargo", ["build", "--release"]);\n\n  // start tauri-driver\n  tauriDriver = spawn(\n    path.resolve(os.homedir(), ".cargo", "bin", "tauri-driver"),\n    [],\n    { stdio: [null, process.stdout, process.stderr] }\n  );\n\n  const capabilities = new Capabilities();\n  capabilities.set("tauri:options", { application });\n  capabilities.setBrowserName("wry");\n\n  // start the webdriver client\n  driver = await new Builder()\n    .withCapabilities(capabilities)\n    .usingServer("http://localhost:4444/")\n    .build();\n});\n\nafter(async function() {\n  // stop the webdriver session\n  await driver.quit();\n\n  // kill the tauri-driver process\n  tauriDriver.kill();\n});\n\ndescribe("Hello Tauri", () => {\n  it("should be cordial", async () => {\n    const text = await driver.findElement(By.css("body > h1")).getText();\n    expect(text).to.match(/^[hH]ello/);\n  });\n\n  it("should be excited", async () => {\n    const text = await driver.findElement(By.css("body > h1")).getText();\n    expect(text).to.match(/!$/);\n  });\n\n  it("should be easy on the eyes", async () => {\n    // selenium returns color css values as rgb(r, g, b)\n    const text = await driver.findElement(By.css("body")).getCssValue("background-color");\n\n    const rgb = text.match(/^rgb\\((?<r>\\d+), (?<g>\\d+), (?<b>\\d+)\\)$/).groups;\n    expect(rgb).to.have.all.keys(\'r\',\'g\',\'b\');\n\n    const luma =  0.2126 * rgb.r + 0.7152 * rgb.g  + 0.0722 * rgb.b ;\n    expect(luma).to.be.lessThan(100)\n  });\n});\n')),(0,i.kt)("p",null,"If you are familiar with JS testing frameworks, ",(0,i.kt)("inlineCode",{parentName:"p"},"describe"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"it"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"expect")," should look familiar. We also have\nsemi-complex ",(0,i.kt)("inlineCode",{parentName:"p"},"before()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"after()")," callbacks to setup and teardown mocha. Lines that are not the tests themselves\nhave comments explaining the setup and teardown code. If you were familiar with the Spec file from the\n",(0,i.kt)("a",{parentName:"p",href:"webdriverio#spec"},"WebdriverIO example"),", you notice a lot more code that isn't tests, as we have to set up a few\nmore WebDriver related items."),(0,i.kt)("h2",{id:"running-the-test-suite"},"Running the Test Suite"),(0,i.kt)("p",null,"Now that we are all set up with our dependencies and our test script, let's run it!"),(0,i.kt)(l.Z,{groupId:"package-manager",defaultValue:"yarn",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm test\n"))),(0,i.kt)(o.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn test\n")))),(0,i.kt)("p",null,"We should see output the following output:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u279c  selenium git:(main) \u2717 yarn test\nyarn run v1.22.11\n$ Mocha\n\n\n  Hello Tauri\n    \u2714 should be cordial (120ms)\n    \u2714 should be excited\n    \u2714 should be easy on the eyes\n\n\n  3 passing (588ms)\n\nDone in 0.93s.\n")),(0,i.kt)("p",null,"We can see that our ",(0,i.kt)("inlineCode",{parentName:"p"},"Hello Tauri")," sweet we created with ",(0,i.kt)("inlineCode",{parentName:"p"},"decribe")," had all 3 items we created with ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," pass their\ntests!"),(0,i.kt)("p",null,"With ",(0,i.kt)("a",{parentName:"p",href:"https://selenium.dev/"},"Selenium")," and some hooking up to a test suite, we just enabled e2e testing without modifying our Tauri\napplication at all!"))}v.isMDXComponent=!0}}]);