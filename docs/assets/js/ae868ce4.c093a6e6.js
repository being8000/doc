"use strict";(self.webpackChunktauri_docs=self.webpackChunktauri_docs||[]).push([[8729],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return k}});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),d=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},s=function(e){var n=d(e.components);return i.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(t),k=a,c=u["".concat(l,".").concat(k)]||u[k]||m[k]||r;return t?i.createElement(c,p(p({ref:n},s),{},{components:t})):i.createElement(c,p({ref:n},s))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,p=new Array(r);p[0]=u;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,p[1]=o;for(var d=2;d<r;d++)p[d]=t[d];return i.createElement.apply(null,p)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},10207:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return l},default:function(){return k},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return m}});var i=t(87462),a=t(63366),r=(t(67294),t(3905)),p=["components"],o={},l=void 0,d={unversionedId:"api/js/modules/os",id:"api/js/modules/os",title:"os",description:"@tauri-apps/api / os",source:"@site/docs/api/js/modules/os.md",sourceDirName:"api/js/modules",slug:"/api/js/modules/os",permalink:"/doc/v1/api/js/modules/os",draft:!1,editUrl:"https://github.com/tauri-apps/tauri-docs/edit/dev/docs/api/js/modules/os.md",tags:[],version:"current",lastUpdatedAt:1652246483,formattedLastUpdatedAt:"5/11/2022",frontMatter:{},sidebar:"api",previous:{title:"notification",permalink:"/doc/v1/api/js/modules/notification"},next:{title:"path",permalink:"/doc/v1/api/js/modules/path"}},s={},m=[{value:"Variables",id:"variables",level:2},{value:"EOL",id:"eol",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Functions",id:"functions",level:2},{value:"arch",id:"arch",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"platform",id:"platform",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"tempdir",id:"tempdir",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"type",id:"type",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"version",id:"version",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-5",level:4}],u={toc:m};function k(e){var n=e.components,t=(0,a.Z)(e,p);return(0,r.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/doc/v1/api/js/"},"@tauri-apps/api")," / os"),(0,r.kt)("h1",{id:"module-os"},"Module: os"),(0,r.kt)("p",null,"Provides operating system-related utility methods and properties."),(0,r.kt)("p",null,"This package is also accessible with ",(0,r.kt)("inlineCode",{parentName:"p"},"window.__TAURI__.os")," when ",(0,r.kt)("inlineCode",{parentName:"p"},"tauri.conf.json > build > withGlobalTauri")," is set to true."),(0,r.kt)("p",null,"The APIs must be allowlisted on ",(0,r.kt)("inlineCode",{parentName:"p"},"tauri.conf.json"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "tauri": {\n    "allowlist": {\n      "os": {\n        "all": true, // enable all Os APIs\n      }\n    }\n  }\n}\n')),(0,r.kt)("p",null,"It is recommended to allowlist only the APIs you use for optimal bundle size and security."),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("h3",{id:"eol"},"EOL"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"EOL"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"\\r\\n"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"\\n"')),(0,r.kt)("p",null,"The operating system-specific end-of-line marker."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"\\n")," on POSIX"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"\\r\\n")," on Windows")),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/tauri-apps/tauri/blob/c8667f9/tooling/api/src/os.ts#L35"},"os.ts:35")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"arch"},"arch"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"arch"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"LiteralUnion"),"<",(0,r.kt)("inlineCode",{parentName:"p"},'"x86"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"x86_64"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"arm"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"aarch64"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"mips"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"mips64"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"powerpc"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"powerpc64"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"riscv64"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"s390x"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"sparc64"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">",">"),(0,r.kt)("p",null,"Returns the operating system CPU architecture for which the tauri app was compiled. Possible values are ",(0,r.kt)("inlineCode",{parentName:"p"},"'x86'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'x86_64'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'arm'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'aarch64'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'mips'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'mips64'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'powerpc'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'powerpc64'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'riscv64'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'s390x'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'sparc64'")),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"LiteralUnion"),"<",(0,r.kt)("inlineCode",{parentName:"p"},'"x86"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"x86_64"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"arm"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"aarch64"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"mips"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"mips64"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"powerpc"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"powerpc64"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"riscv64"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"s390x"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"sparc64"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">",">"),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/tauri-apps/tauri/blob/c8667f9/tooling/api/src/os.ts#L93"},"os.ts:93")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"platform"},"platform"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"platform"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"LiteralUnion"),"<",(0,r.kt)("inlineCode",{parentName:"p"},'"linux"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"darwin"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"ios"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"freebsd"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"dragonfly"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"netbsd"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"openbsd"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"solaris"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"android"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"win32"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">",">"),(0,r.kt)("p",null,"Returns a string identifying the operating system platform.\nThe value is set at compile time. Possible values are ",(0,r.kt)("inlineCode",{parentName:"p"},"'linux'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'darwin'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'ios'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'freebsd'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'dragonfly'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'netbsd'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'openbsd'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'solaris'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'android'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'win32'")),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"LiteralUnion"),"<",(0,r.kt)("inlineCode",{parentName:"p"},'"linux"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"darwin"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"ios"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"freebsd"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"dragonfly"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"netbsd"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"openbsd"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"solaris"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"android"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"win32"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">",">"),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/tauri-apps/tauri/blob/c8667f9/tooling/api/src/os.ts#L41"},"os.ts:41")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tempdir"},"tempdir"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"tempdir"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,r.kt)("p",null,"Returns the operating system's default directory for temporary files as a string."),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/tauri-apps/tauri/blob/c8667f9/tooling/api/src/os.ts#L120"},"os.ts:120")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"type"},"type"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"type"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"LiteralUnion"),"<",(0,r.kt)("inlineCode",{parentName:"p"},'"Linux"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"Darwin"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"Windows_NT"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">",">"),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"'Linux'")," on Linux, ",(0,r.kt)("inlineCode",{parentName:"p"},"'Darwin'")," on macOS, and ",(0,r.kt)("inlineCode",{parentName:"p"},"'Windows_NT'")," on Windows."),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"LiteralUnion"),"<",(0,r.kt)("inlineCode",{parentName:"p"},'"Linux"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"Darwin"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"Windows_NT"'),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">",">"),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/tauri-apps/tauri/blob/c8667f9/tooling/api/src/os.ts#L79"},"os.ts:79")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"version"},"version"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"version"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,r.kt)("p",null,"Returns a string identifying the kernel version."),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),">"),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/tauri-apps/tauri/blob/c8667f9/tooling/api/src/os.ts#L67"},"os.ts:67")))}k.isMDXComponent=!0}}]);