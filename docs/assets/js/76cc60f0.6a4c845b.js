"use strict";(self.webpackChunktauri_docs=self.webpackChunktauri_docs||[]).push([[3980],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=c(r),d=i,m=f["".concat(u,".").concat(d)]||f[d]||p[d]||o;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},51824:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var n=r(87462),i=r(63366),o=(r(67294),r(3905)),a=["components"],s={slug:"/guides/architecture/brownfield"},u="Brownfield Pattern",c={unversionedId:"guides/architecture/inter-process-communication/brownfield",id:"guides/architecture/inter-process-communication/brownfield",title:"Brownfield Pattern",description:"**This is the default pattern.**",source:"@site/docs/guides/02-architecture/inter-process-communication/brownfield.md",sourceDirName:"guides/02-architecture/inter-process-communication",slug:"/guides/architecture/brownfield",permalink:"/doc/v1/guides/architecture/brownfield",draft:!1,editUrl:"https://github.com/tauri-apps/tauri-docs/edit/dev/docs/guides/02-architecture/inter-process-communication/brownfield.md",tags:[],version:"current",lastUpdatedAt:1652462994,formattedLastUpdatedAt:"5/14/2022",frontMatter:{slug:"/guides/architecture/brownfield"},sidebar:"guides",previous:{title:"Inter-Process Communication",permalink:"/doc/v1/guides/architecture/inter-process-communication/"},next:{title:"Isolation Pattern",permalink:"/doc/v1/guides/architecture/isolation"}},l={},p=[{value:"Incompatibilities",id:"incompatibilities",level:2},{value:"Configuration",id:"configuration",level:2}],f={toc:p};function d(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"brownfield-pattern"},"Brownfield Pattern"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},(0,o.kt)("strong",{parentName:"em"},"This is the default pattern."))),(0,o.kt)("p",null,"This is the simplest and most straightforward pattern to use Tauri with due to it trying to be the most compatible with\nexisting frontend projects as much as it can. In short, it tries to require nothing additional to what an existing web\nfrontend might use inside a browser. Not ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("strong",{parentName:"em"},"everything"))," that works in existing browser applications will work out-of\nthe box, see the ",(0,o.kt)("a",{parentName:"p",href:"#incompatibilities"},"Incompatibility section")," for more details."),(0,o.kt)("p",null,"If you are unfamiliar with Brownfield software development in general, the ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Brownfield_(software_development)"},"Brownfield Wikipedia article"),"\nprovides a nice summary of it. For Tauri, the existing software is current browser support and behavior instead of\nlegacy systems."),(0,o.kt)("h2",{id:"incompatibilities"},"Incompatibilities"),(0,o.kt)("p",null,"The first incompatibility category is easy, any browser-specific APIs will not work properly inside Tauri (even while\nusing the Brownfield pattern). If the API is not widely supported across browsers, it's likely not going to be supported\nacross all platforms while using Tauri."),(0,o.kt)("p",null,"The second incompatibility category is features that are planned for Tauri but are currently not fully implemented. Here\nis a list of examples:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tauri-apps/wry/issues/85"},"WebRTC support on Linux")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tauri-apps/wry/issues/81"},"Some permissions APIs")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tauri-apps/wry/issues/349"},"Download Links/Blob as URL")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/tauri-apps/wry/issues/442"},"Better i18n"))),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Because the Brownfield pattern is the default pattern, no configuration option is required to be set. To explicitly set\nit, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"tauri > pattern")," object in the ",(0,o.kt)("inlineCode",{parentName:"p"},"tauri.conf.json")," configuration file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "tauri": {\n    "pattern": {\n      "use": "brownfield"\n    }\n  }\n}\n')),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},(0,o.kt)("strong",{parentName:"em"},"There are no additional configuration options for the brownfield pattern."))))}d.isMDXComponent=!0}}]);