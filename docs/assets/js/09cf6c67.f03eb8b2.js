"use strict";(self.webpackChunktauri_docs=self.webpackChunktauri_docs||[]).push([[9745],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,r(r({ref:t},c),{},{components:n})):a.createElement(h,r({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var p=2;p<o;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},43805:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var a=n(87462),i=n(63366),o=(n(67294),n(3905)),r=["components"],s={slug:"/guides/architecture/isolation"},l="Isolation Pattern",p={unversionedId:"guides/architecture/inter-process-communication/isolation",id:"guides/architecture/inter-process-communication/isolation",title:"Isolation Pattern",description:"The Isolation pattern is a way to intercept and modify Tauri API messages sent by the frontend before they get to Tauri",source:"@site/docs/guides/02-architecture/inter-process-communication/isolation.md",sourceDirName:"guides/02-architecture/inter-process-communication",slug:"/guides/architecture/isolation",permalink:"/doc/v1/guides/architecture/isolation",draft:!1,editUrl:"https://github.com/tauri-apps/tauri-docs/edit/dev/docs/guides/02-architecture/inter-process-communication/isolation.md",tags:[],version:"current",lastUpdatedAt:1652524708,formattedLastUpdatedAt:"5/14/2022",frontMatter:{slug:"/guides/architecture/isolation"},sidebar:"guides",previous:{title:"Brownfield Pattern",permalink:"/doc/v1/guides/architecture/brownfield"},next:{title:"Security",permalink:"/doc/v1/guides/architecture/security"}},c={},u=[{value:"Why",id:"why",level:2},{value:"When",id:"when",level:2},{value:"How",id:"how",level:2},{value:"Approximate Steps of an IPC Message",id:"approximate-steps-of-an-ipc-message",level:3},{value:"Performance Implications",id:"performance-implications",level:3},{value:"Limitations",id:"limitations",level:3},{value:"Recommendations",id:"recommendations",level:2},{value:"Creating the Isolation Application",id:"creating-the-isolation-application",level:2},{value:"Configuration",id:"configuration",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"isolation-pattern"},"Isolation Pattern"),(0,o.kt)("p",null,"The Isolation pattern is a way to intercept and modify Tauri API messages sent by the frontend before they get to Tauri\nCore, all with JavaScript. The secure JavaScript code that is injected by the Isolation pattern is referred to as the\nIsolation application."),(0,o.kt)("h2",{id:"why"},"Why"),(0,o.kt)("p",null,"The Isolation pattern's purpose is to provide a mechanism for developers to help protect their application from unwanted\nor malicious frontend calls to Tauri Core. The need for the Isolation pattern rose out of threats coming from\nuntrusted content running on the frontend, a common case for applications with many dependencies. See\n",(0,o.kt)("a",{parentName:"p",href:"/doc/v1/guides/development/security#threat-models"},"Security: Threat Models")," for a list of many sources of threats that an\napplication may see."),(0,o.kt)("p",null,"The largest threat model described above that the Isolation pattern was designed in mind with was Development Threats.\nNot only do many frontend build-time tools consist of many dozen (or hundreds) of often deeply-nested dependencies, but\na complex application may also have a large amount of (also often deeply-nested) dependencies that are bundled into the\nfinal output."),(0,o.kt)("h2",{id:"when"},"When"),(0,o.kt)("p",null,"Tauri highly recommends using the isolation patten whenever it can be used. Because the Isolation application intercepts\n",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("strong",{parentName:"em"},"all"))," messages from the frontend, it can ",(0,o.kt)("em",{parentName:"p"},"always")," be used."),(0,o.kt)("p",null,"Tauri also believes that locking down your application whenever you use external Tauri APIs is highly suggested.\nAs the developer, you can utilize the secure Isolation application to try and verify IPC inputs to make sure they are\nwithin some expected parameters. As an example, you may want to check that a call to read or write a file is not trying\nto get to a path outside your application's expected locations. Another example is making sure that a Tauri API HTTP\nfetch call is only setting the Origin header to what your application expects it to be."),(0,o.kt)("p",null,"That said, it intercepts ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("strong",{parentName:"em"},"all"))," messages from the frontend, so it will even work with always-on APIs such as\n",(0,o.kt)("a",{parentName:"p",href:"/doc/v1/guides/features/events"},"Events"),". Since some events may cause your own rust code to perform actions, the same sort of\nvalidation techniques can be used with them."),(0,o.kt)("h2",{id:"how"},"How"),(0,o.kt)("p",null,"The Isolation pattern is all about injecting a secure application in between your frontend and Tauri Core to intercept\nand modify incoming IPC messages. It does this by using the sandboxing feature of ",(0,o.kt)("inlineCode",{parentName:"p"},"<iframe>"),"s\nto run the JavaScript securely alongside the main frontend application. Tauri enforces the Isolation pattern\nwhile loading the page, forcing all IPC calls to Tauri Core to instead be routed through the sandboxed Isolation\napplication first. Once the message is ready to be passed to Tauri Core, it is encrypted using the browser's\n",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto"},"SubtleCrypto")," implementation and passed back to the main\nfrontend application. Once there, it is directly passed to Tauri Core where it is then decrypted and read like normal."),(0,o.kt)("p",null,"To ensure that someone cannot read the keys manually for a specific version of your application and use that to modify\nthe messages after being encrypted, new keys are generated each time your application is run."),(0,o.kt)("h3",{id:"approximate-steps-of-an-ipc-message"},"Approximate Steps of an IPC Message"),(0,o.kt)("p",null,"To make it easier to follow, here's an ordered list with the approximate steps an IPC message will go through when being\nsent to Tauri Core with the Isolation pattern:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Tauri's IPC handler receives message"),(0,o.kt)("li",{parentName:"ol"},"IPC handler -> Isolation application"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"[sandbox]")," Isolation application hook runs and potentially modifies the message"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"[sandbox]")," Message is encrypted with AES-GCM using a runtime-generated key"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"[encrypted]")," Isolation application -> IPC handler"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"[encrypted]")," IPC handler -> Tauri Core")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Note: Arrows (->) indicate message passing.")),(0,o.kt)("h3",{id:"performance-implications"},"Performance Implications"),(0,o.kt)("p",null,"Because encryption of the message does occur, this does mean that there are additional overhead costs compared to the\n",(0,o.kt)("a",{parentName:"p",href:"/doc/v1/guides/architecture/brownfield"},"Brownfield pattern")," even if the secure Isolation application doesn't do anything. Outside\nperformance-sensitive applications (who likely have a carefully kept small set of dependencies to keep the performance\nadequate), most applications should not notice the runtime costs of encrypting/decrypting the IPC messages as they are\nboth relatively small and AES-GCM is relatively fast. If you are unfamiliar with AES-GCM, all that is relevant in this\ncontext is that it's the only authenticated mode algorithm included\nin ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto"},"SubtleCrypto"),"\nand that you probably already use it every day under the hood with TLS."),(0,o.kt)("p",null,"There is also a cryptographically secure key generated once each time the Tauri application is started. It is not\ngenerally noticeable if the system already has enough entropy to immediately return enough random numbers, which is\nextremely common for desktop environments. If running in a headless environment to perform\nsome ",(0,o.kt)("a",{parentName:"p",href:"/doc/v1/guides/testing/webdriver/introduction"},"integration testing with WebDriver"),"\nthen you may want to install some sort of entropy generating service such as ",(0,o.kt)("inlineCode",{parentName:"p"},"haveged")," if your operating system does not\nhave one included. ",(0,o.kt)("sup",null,"Linux 5.6 (March 2020) now includes entropy generation using speculative execution.")),(0,o.kt)("h3",{id:"limitations"},"Limitations"),(0,o.kt)("p",null,"There are a few limitations in the Isolation pattern that rose out of platform inconsistencies. The largest limitation\nis due to external files not loading correctly inside sandboxed ",(0,o.kt)("inlineCode",{parentName:"p"},"<iframes>")," on Windows. Because of this, we have\nimplemented a simple script inlining step during build time that takes the content of scripts relative to the\nIsolation application and injects them inline. This means that typical bundling or simple including of files like\n",(0,o.kt)("inlineCode",{parentName:"p"},'<script src="index.js"><\/script>')," still works properly, but newer mechanisms such as ES Modules will ",(0,o.kt)("em",{parentName:"p"},"not")," successfully\nload."),(0,o.kt)("h2",{id:"recommendations"},"Recommendations"),(0,o.kt)("p",null,"Because the point of the Isolation application is to protect against Development Threats, we highly recommend keeping\nyour Isolation application as simple as possible. Not only should you strive to keep dependencies minimal, but you\nshould also consider keeping required build steps minimal. This would allow you to\nnot need to worry about supply chain attacks against your Isolation application on top of your frontend application."),(0,o.kt)("h2",{id:"creating-the-isolation-application"},"Creating the Isolation Application"),(0,o.kt)("p",null,"We will make a small hello-world style Isolation application and hook it up to an imaginary existing Tauri application.\nIt will do no verification of the messages passing through it, only print the contents to the WebView console."),(0,o.kt)("p",null,"For the purposes of this example, let's imagine we are in the same directory as ",(0,o.kt)("inlineCode",{parentName:"p"},"tauri.conf.json"),". The existing Tauri\napplication has it's ",(0,o.kt)("inlineCode",{parentName:"p"},"distDir")," set to ",(0,o.kt)("inlineCode",{parentName:"p"},"../dist"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"../dist-isolation/index.html"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Isolation Secure Script</title>\n  </head>\n  <body>\n    <script src="index.js"><\/script>\n  </body>\n</html>\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"../dist-isolation/index.js"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"window.__TAURI_ISOLATION_HOOK__ = (payload) => {\n  // let's not verify or modify anything, just print the content from the hook\n  console.log('hook', payload)\n  return payload\n}\n")),(0,o.kt)("p",null,"Now, all we need to do is set up our ",(0,o.kt)("inlineCode",{parentName:"p"},"tauri.conf.json")," ",(0,o.kt)("a",{parentName:"p",href:"#configuration"},"configuration")," to use the Isolation pattern, and\nhave just bootstrapped to the Isolation pattern from the ",(0,o.kt)("a",{parentName:"p",href:"/doc/v1/guides/architecture/brownfield"},"Brownfield pattern"),"."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Let's assume that our main frontend ",(0,o.kt)("inlineCode",{parentName:"p"},"distDir")," is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"../dist"),". We also output our Isolation application to\n",(0,o.kt)("inlineCode",{parentName:"p"},"../dist-isolation"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "build": {\n    "distDir": "../dist"\n  },\n  "tauri": {\n    "pattern": {\n      "use": "isolation",\n      "options": {\n        "dir": "../dist-isolation"\n      }\n    }\n  }\n}\n')))}m.isMDXComponent=!0}}]);