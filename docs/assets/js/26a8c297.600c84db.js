"use strict";(self.webpackChunktauri_docs=self.webpackChunktauri_docs||[]).push([[5597],{72360:function(e,n,t){t.d(n,{Z:function(){return o}});var a=t(67294),i=t(86010),r="tabItem_OmH5";function o(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,o),hidden:t},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return m}});var a=t(87462),i=t(67294),r=t(72389),o=t(67392),l=t(7094),u=t(12466),s=t(86010),d="tabList_uSqn",p="tabItem_LplD";function c(e){var n,t,r,c=e.lazy,m=e.block,v=e.defaultValue,h=e.values,f=e.groupId,g=e.className,b=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=h?h:b.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),N=(0,o.l)(k,(function(e,n){return e.value===n.value}));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var T=null===v?v:null!=(n=null!=v?v:null==(t=b.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(r=b[0])?void 0:r.props.value;if(null!==T&&!k.some((function(e){return e.value===T})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+T+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,l.U)(),y=w.tabGroupChoices,E=w.setTabGroupChoices,C=(0,i.useState)(T),I=C[0],S=C[1],O=[],A=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var P=y[f];null!=P&&P!==I&&k.some((function(e){return e.value===P}))&&S(P)}var R=function(e){var n=e.currentTarget,t=O.indexOf(n),a=k[t].value;a!==I&&(A(n),S(a),null!=f&&E(f,a))},x=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=O.indexOf(e.currentTarget)+1;t=O[a]||O[0];break;case"ArrowLeft":var i=O.indexOf(e.currentTarget)-1;t=O[i]||O[O.length-1]}null==(n=t)||n.focus()};return i.createElement("div",{className:(0,s.Z)("tabs-container",d)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":m},g)},k.map((function(e){var n=e.value,t=e.label,r=e.attributes;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:I===n?0:-1,"aria-selected":I===n,key:n,ref:function(e){return O.push(e)},onKeyDown:x,onFocus:R,onClick:R},r,{className:(0,s.Z)("tabs__item",p,null==r?void 0:r.className,{"tabs__item--active":I===n})}),null!=t?t:n)}))),c?(0,i.cloneElement)(b.filter((function(e){return e.props.value===I}))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},b.map((function(e,n){return(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==I})}))))}function m(e){var n=(0,r.Z)();return i.createElement(c,(0,a.Z)({key:String(n)},e))}},34088:function(e,n,t){var a=t(67294),i=t(32258),r=t(9877),o=t(72360),l=[{label:"Yarn",value:"yarn tauri "},{label:"npm",value:"npm run tauri "},{label:"cargo",value:"cargo tauri "},{label:"Global",value:"tauri "}];n.Z=function(e){var n=e.name;return a.createElement(r.Z,{groupId:"installMode",defaultValue:"yarn tauri ",values:l},l.map((function(e){return a.createElement(o.Z,{value:e.value},a.createElement(i.Z,{className:"language-sh"},"npm"!==e.label?e.value+n:function(e,n){var t=n.indexOf("--");return-1===t?e+n:e+n.slice(0,t)+"-- "+n.slice(t)}(e.value,n)))})))}},24085:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return v},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return c}});var a=t(87462),i=t(63366),r=(t(67294),t(3905)),o=t(34088),l=["components"],u={id:"cli",title:"CLI"},s=void 0,d={unversionedId:"api/cli",id:"api/cli",title:"CLI",description:"",source:"@site/docs/api/cli.md",sourceDirName:"api",slug:"/api/cli",permalink:"/doc/v1/api/cli",draft:!1,editUrl:"https://github.com/tauri-apps/tauri-docs/edit/dev/docs/api/cli.md",tags:[],version:"current",lastUpdatedAt:1652289869,formattedLastUpdatedAt:"5/12/2022",frontMatter:{id:"cli",title:"CLI"},sidebar:"api",previous:{title:"Configuration",permalink:"/doc/v1/api/config"},next:{title:"README",permalink:"/doc/v1/api/js/"}},p={},c=[{value:"<code>info</code>",id:"info",level:2},{value:"<code>init</code>",id:"init",level:2},{value:"<code>plugin init</code>",id:"plugin-init",level:2},{value:"<code>dev</code>",id:"dev",level:2},{value:"<code>build</code>",id:"build",level:2},{value:"<code>version</code>",id:"version",level:2},{value:"CLI usage",id:"cli-usage",level:2}],m={toc:c};function v(e){var n=e.components,t=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"info"},(0,r.kt)("inlineCode",{parentName:"h2"},"info")),(0,r.kt)(o.Z,{name:"info",mdxType:"Command"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\nUSAGE:\n    cargo-tauri info [OPTIONS]\n\nOPTIONS:\n    -h, --help       Print help information\n    -v, --verbose    Enables verbose logging\n    -V, --version    Print version information\n")),(0,r.kt)("p",null,"It shows a concise list of information about the environment, Rust, Node.js and their versions as well as some relevant configurations."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"This command is pretty helpful when you need to have a quick overview of your application. When requesting some help, it can be useful that you share this report with us."))),(0,r.kt)("h2",{id:"init"},(0,r.kt)("inlineCode",{parentName:"h2"},"init")),(0,r.kt)(o.Z,{name:"init",mdxType:"Command"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\nUSAGE:\n    cargo-tauri init [OPTIONS]\n\nOPTIONS:\n    -A, --app-name <APP_NAME>\n            Name of your Tauri application\n\n        --ci\n            Skip prompting for values\n\n    -d, --directory <DIRECTORY>\n            Set target directory for init [default: /home/runner/work/tauri-docs/tauri-docs]\n\n    -D, --dist-dir <DIST_DIR>\n            Web assets location, relative to <project-dir>/src-tauri\n\n    -f, --force\n            Force init to overwrite the src-tauri folder\n\n    -h, --help\n            Print help information\n\n    -l, --log\n            Enables logging\n\n    -P, --dev-path <DEV_PATH>\n            Url of your dev server\n\n    -t, --tauri-path <TAURI_PATH>\n            Path of the Tauri project to use (relative to the cwd)\n\n    -v, --verbose\n            Enables verbose logging\n\n    -V, --version\n            Print version information\n\n    -W, --window-title <WINDOW_TITLE>\n            Window title of your Tauri application\n")),(0,r.kt)("h2",{id:"plugin-init"},(0,r.kt)("inlineCode",{parentName:"h2"},"plugin init")),(0,r.kt)(o.Z,{name:"plugin init",mdxType:"Command"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\nUSAGE:\n    cargo-tauri plugin init [OPTIONS] --name <PLUGIN_NAME>\n\nOPTIONS:\n    -a, --author <AUTHOR>            Author name\n        --api                        Initializes a Tauri plugin with TypeScript API\n    -d, --directory <DIRECTORY>      Set target directory for init [default:\n                                     /home/runner/work/tauri-docs/tauri-docs]\n    -h, --help                       Print help information\n    -n, --name <PLUGIN_NAME>         Name of your Tauri plugin\n    -t, --tauri-path <TAURI_PATH>    Path of the Tauri project to use (relative to the cwd)\n    -v, --verbose                    Enables verbose logging\n    -V, --version                    Print version information\n")),(0,r.kt)("h2",{id:"dev"},(0,r.kt)("inlineCode",{parentName:"h2"},"dev")),(0,r.kt)(o.Z,{name:"dev",mdxType:"Command"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\nUSAGE:\n    cargo-tauri dev [OPTIONS] [ARGS]...\n\nARGS:\n    <ARGS>...    Command line arguments passed to the runner\n\nOPTIONS:\n    -c, --config <CONFIG>        JSON string or path to JSON file to merge with tauri.conf.json\n    -e, --exit-on-panic          Exit on panic\n    -f, --features <FEATURES>    List of cargo features to activate\n    -h, --help                   Print help information\n    -r, --runner <RUNNER>        Binary to use to run the application\n        --release                Run the code in release mode\n    -t, --target <TARGET>        Target triple to build against\n    -v, --verbose                Enables verbose logging\n    -V, --version                Print version information\n")),(0,r.kt)("p",null,"This command will open the WebView in development mode. It makes use of the ",(0,r.kt)("inlineCode",{parentName:"p"},"build.devPath")," property from your ",(0,r.kt)("inlineCode",{parentName:"p"},"src-tauri/tauri.conf.json")," file."),(0,r.kt)("p",null,"If you have entered a command to the ",(0,r.kt)("inlineCode",{parentName:"p"},"build.beforeDevCommand")," property, this one will be executed before the ",(0,r.kt)("inlineCode",{parentName:"p"},"dev")," command."),(0,r.kt)("a",{href:"../api/config#build"},"See more about the configuration."),(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Troubleshooting")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you're not using ",(0,r.kt)("inlineCode",{parentName:"p"},"build.beforeDevCommand"),", make sure your ",(0,r.kt)("inlineCode",{parentName:"p"},"build.devPath")," is correct and, if using a development server, that it's started before using this command."))),(0,r.kt)("h2",{id:"build"},(0,r.kt)("inlineCode",{parentName:"h2"},"build")),(0,r.kt)(o.Z,{name:"build",mdxType:"Command"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\nUSAGE:\n    cargo-tauri build [OPTIONS] [ARGS]...\n\nARGS:\n    <ARGS>...    Command line arguments passed to the runner\n\nOPTIONS:\n    -b, --bundles <BUNDLES>      List of bundles to package\n    -c, --config <CONFIG>        JSON string or path to JSON file to merge with tauri.conf.json\n    -d, --debug                  Builds with the debug flag\n    -f, --features <FEATURES>    List of cargo features to activate\n    -h, --help                   Print help information\n    -r, --runner <RUNNER>        Binary to use to build the application, defaults to `cargo`\n    -t, --target <TARGET>        Target triple to build against. It must be one of the values\n                                 outputted by `$rustc --print target-list` or `universal-apple-\n                                 darwin` for an universal macOS application. Note that compiling an\n                                 universal macOS application requires both `aarch64-apple-darwin`\n                                 and `x86_64-apple-darwin` targets to be installed\n    -v, --verbose                Enables verbose logging\n    -V, --version                Print version information\n")),(0,r.kt)("p",null,"This command will bundle your application, either in production mode or debug mode if you used the ",(0,r.kt)("inlineCode",{parentName:"p"},"--debug")," flag. It makes use of the ",(0,r.kt)("inlineCode",{parentName:"p"},"build.distDir")," property from your ",(0,r.kt)("inlineCode",{parentName:"p"},"src-tauri/tauri.conf.json")," file."),(0,r.kt)("p",null,"If you have entered a command to the ",(0,r.kt)("inlineCode",{parentName:"p"},"build.beforeBuildCommand")," property, this one will be executed before the ",(0,r.kt)("inlineCode",{parentName:"p"},"build")," command."),(0,r.kt)("a",{href:"../api/config#build"},"See more about the configuration."),(0,r.kt)("h2",{id:"version"},(0,r.kt)("inlineCode",{parentName:"h2"},"version")),(0,r.kt)(o.Z,{name:"--version",mdxType:"Command"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  Description\n    Returns the current version of tauri\n")),(0,r.kt)("p",null,"This command will show the current version of Tauri."),(0,r.kt)("h2",{id:"cli-usage"},"CLI usage"),(0,r.kt)("p",null,"See more about the usage through this ",(0,r.kt)("a",{parentName:"p",href:"../guides/development/development-cycle"},"complete guide"),"."))}v.isMDXComponent=!0}}]);