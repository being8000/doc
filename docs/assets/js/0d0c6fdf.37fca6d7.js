"use strict";(self.webpackChunktauri_docs=self.webpackChunktauri_docs||[]).push([[153],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var a=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=a.createContext({}),l=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},c=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(r),h=o,y=p["".concat(u,".").concat(h)]||p[h]||d[h]||i;return r?a.createElement(y,n(n({ref:t},c),{},{components:r})):a.createElement(y,n({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,n=new Array(i);n[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,n[1]=s;for(var l=2;l<i;l++)n[l]=r[l];return a.createElement.apply(null,n)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},92807:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var a=r(87462),o=r(63366),i=(r(67294),r(3905)),n=["components"],s={sidebar_position:3},u="Security",l={unversionedId:"guides/architecture/security",id:"guides/architecture/security",title:"Security",description:"Whether you like it or not, today's applications live in operating systems that can be (and regularly are) compromised by any number of attacks. When your insecure application is a gateway for such lateral movement into the operating system, you are contributing to the tools that professional hackers have at their disposal. Don't be a tool.",source:"@site/docs/guides/02-architecture/security.md",sourceDirName:"guides/02-architecture",slug:"/guides/architecture/security",permalink:"/doc/v1/guides/architecture/security",draft:!1,editUrl:"https://github.com/tauri-apps/tauri-docs/edit/dev/docs/guides/02-architecture/security.md",tags:[],version:"current",lastUpdatedAt:1652462994,formattedLastUpdatedAt:"5/14/2022",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"guides",previous:{title:"Isolation Pattern",permalink:"/doc/v1/guides/architecture/isolation"},next:{title:"Security",permalink:"/doc/v1/guides/development/security"}},c={},d=[{value:"Security Is A Community Responsibility",id:"security-is-a-community-responsibility",level:2},{value:"Keep Your Application Up-To-Date",id:"keep-your-application-up-to-date",level:3},{value:"Evaluate Your Dependencies",id:"evaluate-your-dependencies",level:3},{value:"Adopt More Secure Coding Practices",id:"adopt-more-secure-coding-practices",level:3},{value:"Educate Your Users",id:"educate-your-users",level:3},{value:"Threat Models",id:"threat-models",level:2},{value:"Upstream Threats",id:"upstream-threats",level:3},{value:"Development Threats",id:"development-threats",level:3},{value:"Buildtime Threats",id:"buildtime-threats",level:3},{value:"Runtime Threats",id:"runtime-threats",level:3},{value:"Updater Threats",id:"updater-threats",level:3},{value:"Secure Content Loading",id:"secure-content-loading",level:2}],p={toc:d};function h(e){var t=e.components,r=(0,o.Z)(e,n);return(0,i.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"security"},"Security"),(0,i.kt)("p",null,"Whether you like it or not, today's applications live in operating systems that can be (and regularly are) compromised by any number of attacks. When your insecure application is a gateway for such lateral movement into the operating system, you are contributing to the tools that professional hackers have at their disposal. Don't be a tool."),(0,i.kt)("p",null,"This is why we have taken every opportunity to help you secure your application, prevent undesired access to system level interfaces, and manufacture bullet-proof applications. Your users assume you are following best practices. We make that easy, but you should still be aware of the below information."),(0,i.kt)("h2",{id:"security-is-a-community-responsibility"},"Security Is A Community Responsibility"),(0,i.kt)("p",null,"It is important to remember that the security of your Tauri application is the sum of the overall security of Tauri itself, all Rust and NPM dependencies, your code, and the devices that run the final application. The Tauri Team does their best to do their part, the security community does its part, and you too should follow a few important best practices."),(0,i.kt)("h3",{id:"keep-your-application-up-to-date"},"Keep Your Application Up-To-Date"),(0,i.kt)("p",null,"When releasing your app into the wild, you are also shipping a bundle that has Tauri in it. Vulnerabilities affecting Tauri may impact the security of your application. By updating Tauri to the latest version, you ensure that critical vulnerabilities are already patched and cannot be exploited in your application. Also be sure to keep your compiler (rustc) and transpilers (nodejs) up to date, because there are often security issues that are resolved."),(0,i.kt)("h3",{id:"evaluate-your-dependencies"},"Evaluate Your Dependencies"),(0,i.kt)("p",null,"While NPM and Crates.io provide many convenient packages, it is your responsibility to choose trustworthy 3rd-party libraries - or rewrite them in Rust. If you do use outdated libraries affected by known vulnerabilities or are unmaintained, your application security and good-night's sleep could be in jeopardy. Use tooling like npm audit and cargo audit to automate this process and lean on the security community's important work."),(0,i.kt)("h3",{id:"adopt-more-secure-coding-practices"},"Adopt More Secure Coding Practices"),(0,i.kt)("p",null,"The first line of defense for your application is your own code. Although Tauri can protect you from common web vulnerabilities, such as Cross-Site Scripting based Remote Code Execution, improper configurations can have a security impact. Even if this were not the case, it is highly recommended to adopt secure software development best practices and perform security testing. We detail what this means in the next section."),(0,i.kt)("h3",{id:"educate-your-users"},"Educate Your Users"),(0,i.kt)("p",null,'True security really means that unexpected behaviour cannot happen. So in a sense, being more secure means having the peace of mind in knowing that ONLY those things that you want to happen can happen. In the real world, though, this is a utopian "dream". However, by removing as many vectors as possible and building on a solid foundation, your choice for Tauri is a signal to your users that you really care about them, their safety, and their devices.'),(0,i.kt)("h2",{id:"threat-models"},"Threat Models"),(0,i.kt)("p",null,"Tauri applications are composed of many pieces at different points of the lifecycle. Here we describe classical threats and what you SHOULD do about them."),(0,i.kt)("h3",{id:"upstream-threats"},"Upstream Threats"),(0,i.kt)("p",null,"Tauri is a direct dependency of your project, and we maintain strict authorial control of commits, reviews, pull requests, and releases. We do our best to maintain up-to-date dependencies and take action to either update or fork and fix. Other projects may not be so well maintained, and may not even have ever been audited. Please consider their health when integrating them, otherwise you may have adopted architectural debt without even knowing it."),(0,i.kt)("h3",{id:"development-threats"},"Development Threats"),(0,i.kt)("p",null,"We assume that you, the developer, care for your development environment. It is on you to make sure that your operating system, build toolchains, and associated dependencies are kept up to date."),(0,i.kt)("p",null,'A genuine risk all of us face is what is known as "supply-chain attacks", which are usually considered to be attacks on direct dependencies of your project. However, a growing class of attacks in the wild directly target development machines, and you would be well-off to address this head-on.'),(0,i.kt)("p",null,"One practice that we highly recommend, is to only ever consume critical dependencies from git using hash revisions at best or named tags as second best. This holds for Rust as well as the Node ecosystem. Also, consider requiring all contributors to sign their commits and protect Git branches and pipelines."),(0,i.kt)("h3",{id:"buildtime-threats"},"Buildtime Threats"),(0,i.kt)("p",null,"Modern organisations use CI/CD to manufacture binary artifacts. At Tauri, we even provide a Github Workflow for building on multiple platforms. If you create your own CI/CD and depend on third-party tooling, be wary of actions whose versions you have not explicitly pinned."),(0,i.kt)("p",null,"You should sign your binaries for the platform you are shipping to, and while this can be complicated and somewhat costly to setup, end-users expect that your app is verifiably from you."),(0,i.kt)("h3",{id:"runtime-threats"},"Runtime Threats"),(0,i.kt)("p",null,"We assume the webview is insecure, which has led Tauri to implement several protections regarding webview access to system APIs in the context of loading untrusted userland content."),(0,i.kt)("p",null,"You can read more in detail below, but using the CSP will lockdown types of communication that the Webview can undertake. Furthermore, ",(0,i.kt)("a",{parentName:"p",href:"#"},"Context Isolation")," prevents untrusted content or scripts from accessing the API within the Webview."),(0,i.kt)("p",null,"And please, whatever you do, ",(0,i.kt)("strong",{parentName:"p"},"DO NOT")," trust the results of cryptography using private keys in the Webview. Rust is there for a reason."),(0,i.kt)("h3",{id:"updater-threats"},"Updater Threats"),(0,i.kt)("p",null,"We have done our best to make shipping hot-updates to the app as straightforward and secure as possible. However, all bets are off if you lose control of the manifest server, the build server, or the binary hosting service. If you build your own system, consult a professional OPS architect and build it properly."),(0,i.kt)("h2",{id:"secure-content-loading"},"Secure Content Loading"),(0,i.kt)("p",null,"Tauri restricts the ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"},"Content Security Policy")," (CSP) of your HTM pages. Local scripts are hashed, styles and external scripts are referenced using a cryptographic nonce, which prevents unallowed content from being loaded."),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Avoid loading remote content such as scripts served over a CDN as they introduce an attack vector, but any untrusted file can introduce new and subtle attack vectors."))),(0,i.kt)("p",null,"The CSP protection is only enabled if ",(0,i.kt)("inlineCode",{parentName:"p"},"[tauri > security > csp]")," is set on the Tauri configuration file. You should make it as restricted as possible, only allowing the webview to load assets from hosts you trust and preferably own. At compile time, Tauri appends its nonces and hashes to the relevant CSP attributes automatically, so you only need to worry about what is unique to your application."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src"},(0,i.kt)("inlineCode",{parentName:"a"},"script-src")),", ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src"},(0,i.kt)("inlineCode",{parentName:"a"},"style-src"))," and ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/Sources#sources"},"CSP Sources")," for more\ninformation about this protection."))}h.isMDXComponent=!0}}]);